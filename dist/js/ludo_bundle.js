!function(t){var e={};function i(s){if(e[s])return e[s].exports;var r=e[s]={i:s,l:!1,exports:{}};return t[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(s,r,function(e){return t[e]}.bind(null,r));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e){class i{constructor(){this.DOMItems={toggleBanner:".banner-up",banner:".banner",bannerName:".banner-name",game:".gameScreen",dice:".control-dice",controlBoard:".control",controlOpt:".control-option",activePlayer:[".green",".red",".yellow",".blue"],piecesId:"num-pieces",info:".control-info",infoIcon:".fa-question-circle",closeIcon:".info-close",rulesInfo:".control-info__rules",rulesIcon:".rules_icon"},this.canvas=document.querySelector(this.DOMItems.game)}getCanvasXY(){return this.canvas.width=3*window.innerWidth/4,this.canvas.height=3*window.innerHeight/4,[Math.round(this.canvas.width/15),Math.round(this.canvas.height/15)]}getCtx(){return this.canvas.getContext("2d")}displayPiecesCount(t){const e=document.getElementById(this.DOMItems.piecesId);e.textContent=t<=0?"0":t.toString()}setDice(t){let e=`<i class="fas fa-dice-${t} fa-4x"></i>`;document.querySelector(this.DOMItems.dice).innerHTML=e}insertRules(){return new Promise(t=>{document.querySelector(this.DOMItems.info).insertAdjacentHTML("beforeend",'<div class="control-info__rules"><h2>Rules</h2><ul><li>Once you roll a 6, you can add a player.</li><li>If you roll a value that moves you on top of a player, you eliminate that player and send them back to their inactive space.</li><li>*Once you eliminate a player, you have to make a run through the entire board and once you return to your colored path, you can move to the home base and get closer to winning.</li><li>*Winning requires that you move all of your pieces to the home base.</li></ul><p class="unimplemented">* = The features have not yet been implemented</p></div>')})}insertOptionItem(t,e){let i=`<div class="control-option">${e} ${t}<i class="fas fa-chess-pawn fa-3x"></i></div>`,s=this.DOMItems.controlBoard;document.querySelector(s).insertAdjacentHTML("afterbegin",i)}clearControlItems(){return new Promise((t,e)=>{const i=document.querySelectorAll(this.DOMItems.controlOpt);0===i.length&&e("no options available");let s=i[0].parentNode;t(i.forEach(t=>s.removeChild(t)))})}incrementActivePlayer(t){return document.querySelector(this.DOMItems.activePlayer[t]).classList.toggle("active"),3===t?t=0:t++,document.querySelector(this.DOMItems.activePlayer[t]).classList.toggle("active"),t}}class s{constructor(t,e,i){this.x=t,this.y=e,this.ctx=i,this.startCoord=[[1,6],[8,1],[13,8],[6,13]],this.coord={green:[[1,1],[1,4],[4,1],[4,4]],red:[[10,1],[10,4],[13,1],[13,4]],yellow:[[10,10],[10,13],[13,10],[13,13]],blue:[[1,10],[1,13],[4,10],[4,13]]},this.inactive={green:[[1,1],[1,4],[4,1],[4,4]],red:[[10,1],[10,4],[13,1],[13,4]],yellow:[[10,10],[10,13],[13,10],[13,13]],blue:[[1,10],[1,13],[4,10],[4,13]]}}makePiece(t,e,i,s){e=this.x*e+this.x/2,i=this.y*i+this.y/2;const r=Math.ceil(this.x/2),a=Math.ceil(this.y/2),o=r<a?r:a;this.ctx.fillStyle=t,this.ctx.beginPath(),this.ctx.arc(e,i,o,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="black",this.ctx.fillText(String(s),e,i+10)}placePiece(t,e){e.forEach((e,i)=>{try{i=Math.abs(i-4),this.makePiece(t,e[0],e[1],i)}catch(t){console.log(t)}})}makeRectangle(t,e,i,s=this.x,r=this.y){e=this.x*e,i=this.y*i,this.ctx.strokeStyle="black",this.ctx.lineWidth=2,this.ctx.fillStyle=t,this.ctx.fillRect(e,i,s,r),this.ctx.strokeRect(e,i,s,r)}makePath(t,e,i,s,r="white"){for(let a=0;a<=i;a++)"vertical"==s&&this.makeRectangle(r,t,e+a,this.x,this.y),"horizontal"===s&&this.makeRectangle(r,t+a,e,this.x,this.y)}setupBoard(){this.ctx.clearRect(0,0,window.innerWidth,window.innerHeight);const t=6*this.x,e=6*this.y,[i,s]=[3,3];this.makeRectangle("#004d1a",0,0,t,e),this.makeRectangle("#4d0f00",9,0,t,e),this.makeRectangle("#00004d",0,9,t,e),this.makeRectangle("#4d4d00",9,9,t,e),this.makeRectangle("pink",2*i,2*s,this.x*i,this.y*s);const r=[[6,0,5],[7,0,5],[8,0,5],[6,9,5],[7,9,5],[8,9,5]],a=[[0,6,5],[0,7,5],[0,8,5],[9,6,5],[9,7,5],[9,8,5]];for(let t=0;t<=r.length;t++)try{this.makePath(...r[t],"vertical")}catch(t){}for(let t=0;t<=a.length;t++)try{this.makePath(...a[t],"horizontal")}catch(t){}this.makeRectangle("#004D1A",this.startCoord[0][0],this.startCoord[0][1]),this.makePath(1,7,4,"horizontal","#004D1A"),this.makeRectangle("#4D0F00",this.startCoord[1][0],this.startCoord[1][1]),this.makePath(7,1,4,"vertical","#4D0F00"),this.makeRectangle("#4D4D00",this.startCoord[2][0],this.startCoord[2][1]),this.makePath(9,7,4,"horizontal","#4D4D00"),this.makeRectangle("#00004D",this.startCoord[3][0],this.startCoord[3][1]),this.makePath(7,9,4,"vertical","#00004D"),this.ctx.font="bold 25px serif",this.ctx.textAlign="center",this.placePiece("#39e600",this.coord.green),this.placePiece("#e60000",this.coord.red),this.placePiece("#e6e600",this.coord.yellow),this.placePiece("#3333ff",this.coord.blue)}}class r{constructor(t,e){this.x=t,this.y=e,this.illegalValues={absolute:[[0,0,5,5],[9,0,14,5],[9,9,14,14],[0,9,5,14],[6,6,8,8]],green:!1,red:!1,yellow:!1,blue:!1},this.player="unknown",this.quadrants=new Map,this.setQuadrants(),this.currKey=1}setQuadrants(){this.quadrants.set(1,"-dx"),this.quadrants.set(2,"-dy"),this.quadrants.set(3,"+dx"),this.quadrants.set(4,"-dy"),this.quadrants.set(5,"+dx"),this.quadrants.set(6,"+dy"),this.quadrants.set(7,"+dx"),this.quadrants.set(8,"+dy"),this.quadrants.set(9,"-dx"),this.quadrants.set(10,"+dy"),this.quadrants.set(11,"-dx"),this.quadrants.set(12,"-dy"),this.quadrants.set(13,"+dx"),this.quadrants.set(14,"+dy"),this.quadrants.set(15,"-dx"),this.quadrants.set(16,"-dy")}getQuadrant(t,e){return 1<=t&&t<=5&&9===e?this.currKey=1:0===t&&7<=e&&e<=8?this.currKey=2:0<=t&&t<=5&&6===e?this.currKey=3:6===t&&1<=e&&e<=5?this.currKey=4:6<=t&&t<=7&&0===e?this.currKey=5:8===t&&0<=e&&e<=5?this.currKey=6:9<=t&&t<=13&&6===e?this.currKey=7:14===t&&6<=e&&e<=7?this.currKey=8:9<=t&&t<=14&&8===e?this.currKey=9:8===t&&9<=e&&e<=13?this.currKey=10:7<=t&&t<=8&&14===e?this.currKey=11:6===t&&9<=e&&e<=14&&(this.currKey=12),this.illegalValues[this.player]&&this.goHome(t,e),this.quadrants.get(this.currKey)}isLegal(t,e){let i,s,r,a,o=!0,l=this.illegalValues.absolute;-1!==t&&-1!==e||(o=!1);for(let n=0;n<=l.length-1;n++)i=l[n][0],s=l[n][2],r=l[n][1],a=l[n][3],i<=t&&t<=s&&r<=e&&e<=a&&(o=!1);return o}transitionQuadrant(){let t=!0,e=this.x,i=this.y;return 3===this.currKey&&5===e&&6===i?[e,i]=[e+1,i-1]:6===this.currKey&&8===e&&5===i?[e,i]=[e+1,i+1]:9===this.currKey&&9===e&&8===i?[e,i]=[e-1,i+1]:12===this.currKey&&6===e&&9===i&&([e,i]=[e-1,i-1],this.currKey=1,t=!1),t&&this.currKey++,[e,i]}changeInDirection(t,e,i){switch(i){case"+dx":return[t+1,e];case"-dx":return[t-1,e];case"+dy":return[t,e+1];case"-dy":return[t,e-1]}}removeHomeRules(){const t=[[6,6,6,6],[8,6,8,6],[8,8,8,8],[6,8,6,8]];let e=this.illegalValues.absolute,i=!1,s=[6,6,8,8];e.forEach(t=>{t.toString()===s.toString()&&(i=!0)}),i&&(this.illegalValues.absolute.pop(),this.illegalValues.absolute.push(...t))}goHome(t,e){this.illegalValues[this.player]&&this.removeHomeRules(),0<=t&&t<=5&&7==e&&"green"===this.player?this.currKey=13:7===t&&0<=e&&e<=5&&"red"===this.player?this.currKey=14:9<=t&&t<=14&&7===e&&"yellow"===this.player?this.currKey=15:7===t&&9<=e&&e<=14&&"blue"===this.player&&(this.currKey=16)}moveCoordinates(){const t=this.getQuadrant(this.x,this.y);let[e,i]=this.changeInDirection(this.x,this.y,t);this.isLegal(e,i)?(this.x=e,this.y=i):[this.x,this.y]=this.transitionQuadrant()}getNewCoordinates(){return this.moveCoordinates(),[this.x,this.y]}checkWon(){let[t,e]=[this.x,this.y];return 6===t&&7===e||(7===t&&6==e||(8===t&&7===e||7===t&&8===e))}}mainCtl=new class{constructor(){this.uiCtl=new i;const[t,e]=this.uiCtl.getCanvasXY();this.ctx=this.uiCtl.getCtx(),this.boardCtl=new s(t,e,this.ctx),this.playerPieces=[4,4,4,4],this.wonPieces=[0,0,0,0],this.players=[this.boardCtl.coord.green,this.boardCtl.coord.red,this.boardCtl.coord.yellow,this.boardCtl.coord.blue],this.activePlayer=0,this.quad=new r(-1,-1),this.diceRoll=2}getActiveName(t){return void 0===t&&(t=this.activePlayer),["green","red","yellow","blue"][this.activePlayer]}removeWonPlayer(t){console.log("In removeWonPlayer function with index "+t);let e=this.getActiveName(this.activePlayer),i=this.boardCtl.coord[e];i=i.splice(t,1),this.boardCtl.coord[e]=i,console.log(this.players[this.activePlayer]),this.wonPieces[this.activePlayer]++}insertOptions(t,e){const i=4-this.wonPieces[this.activePlayer]-this.playerPieces[this.activePlayer];3===this.activePlayer&&(console.log("the number of pieces is "+i),console.log(`won pieces=${this.wonPieces[this.activePlayer]} and remaining pieces=${this.playerPieces[this.activePlayer]}`)),"move"===e&&this.moveOption(i,t),"add"===e&&this.addOption(i)}moveOption(t,e){for(let i=1;i<=t;i++)this.uiCtl.insertOptionItem(i,"Move Piece"),document.querySelector(this.uiCtl.DOMItems.controlOpt).addEventListener("click",()=>{console.log("the value passed to roll as 'item' is "+(4-i)),this.movePlayer(e,4-i),this.uiCtl.clearControlItems()})}movePlayer(t=1,e=0){let i,s,r=this.players[this.activePlayer][e][0],a=this.players[this.activePlayer][e][1];this.quad.x=r,this.quad.y=a;for(let r=1;r<=t;r++)[i,s]=this.quad.getNewCoordinates(),this.quad.checkWon()&&this.removeWonPlayer(e);let o=this.getActiveName(this.activePlayer);console.log("moving the following indexed player "+o),console.log("the player value is "+e),console.log(this.boardCtl.coord[o][e]),this.boardCtl.coord[o][e]=[i,s],this.boardCtl.setupBoard(),this.checkElimination()}addOption(t){this.uiCtl.insertOptionItem(t,"Add Piece"),document.querySelector(this.uiCtl.DOMItems.controlOpt).addEventListener("click",()=>{this.addPlayer(),this.uiCtl.clearControlItems()})}changeBoardObj(t,e=3){return 0}addPlayer(){this.playerPieces[this.activePlayer]--;let t=this.playerPieces[this.activePlayer];this.uiCtl.displayPiecesCount(t);let e=this.boardCtl.startCoord[this.activePlayer],i=this.getActiveName(this.activePlayer);this.boardCtl.coord[i][t]=e,this.boardCtl.setupBoard(),this.checkElimination()}getOtherPlayers(t){let e=[0,1,2,3];const i=e.find(e=>e===t);return e.splice(i,1),e}changeCoordInitial(t,e){const i=["green","red","yellow","blue"][e];let s=this.getActiveName(this.activePlayer);this.boardCtl.coord[s][e][t]=this.boardCtl.inactive[i][t],this.boardCtl.setupBoard()}compareActiveOther(t,e){t.forEach((t,i)=>{e.forEach((e,s)=>{if(t[0]===e[0]&&t[1]===e[1])return i})})}checkElimination(){let t,e,i=this.players[this.activePlayer],s=this.getOtherPlayers(this.activePlayer),r=-1;for(let a of s)r=this.compareActiveOther(i,this.players[a]),void 0!==r&&(e=a,t=r);null!=t&&null!=e&&(this.changeCoordInitial(t,e),this.quad.illegalValues[this.getActiveName()]=!0)}clearOptions(){this.uiCtl.clearControlItems().then(t=>null).catch(t=>null)}boardLogic(t){this.clearOptions(),this.activePlayer=this.uiCtl.incrementActivePlayer(this.activePlayer),this.quad.player=this.getActiveName(this.activePlayer);const e=this.playerPieces[this.activePlayer],i=4-this.wonPieces[this.activePlayer]-e;6===t?4===e?this.insertOptions(t,"add"):1<=e&&e<=3?(this.insertOptions(t,"move"),this.insertOptions(t,"add")):0===i&&this.insertOptions(t,"move"):i>=1&&(console.log("the remaining number of pieces is "+i),this.insertOptions(t,"move"))}setupEventListeners(){const t=this.uiCtl.DOMItems;document.querySelector(t.infoIcon).addEventListener("click",t=>{this.uiCtl.insertRules().then(t=>{}).catch(t=>console.log(t))}),document.querySelector(t.closeIcon).addEventListener("click",e=>{try{let e=document.querySelector(t.rulesInfo);e.parentElement.removeChild(e)}catch(e){console.log(e)}}),document.querySelector(t.banner).addEventListener("click",e=>{document.querySelector(t.bannerName).classList.toggle("close")}),document.querySelector(t.dice).addEventListener("click",t=>{let e=Math.round(5*Math.random());e=this.diceRoll,this.uiCtl.setDice(["one","two","three","four","five","six"][e]),this.boardLogic(e+1)})}init(){this.boardCtl.setupBoard(),this.setupEventListeners()}},ctx=mainCtl.ctx,mainCtl.init()}]);